{******************************************************************************}
{*  Shacal.test.int.inc                                                       *}
{*  Revolutionary Confederation of Anarcho Syndicalists                       *}
{*  Written by: black.rabbit 2011                                             *}
{******************************************************************************}
type
    PShacalTestVector = ^TShacalTestVector;
    TShacalTestVector = packed record
        Key    : String;
        IV     : String [64];
        Plain  : String [64];
        Cipher : String [64];
    end;

{$IFDEF ECB}
function TestEncryptShacalECB (const aKey: String;
                               const aValue: String) : String;
function TestDecryptShacalECB (const aKey: String;
                               const aValue: String) : String;
function TestShacalECB : Boolean;

const
    SHACAL_ECB_TEST_VECTORS : packed array [0..3] of TShacalTestVector = (
        { 512-битный ключ }
        ( Key    : '80000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '361ab6322fa9e7a7bb23818d839e01bd'+
                   'dafdf47305426edd297aedb9f6202bae' ),

        ( Key    : '40000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'f3baf53e5301e08813f8be6f651bb19e'+
                   '9722151ff15063ba42a6fef7cf3bf3d7' ),

        ( Key    : '20000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'e485005217441b60ee5b48ee8af924b2'+
                   '68b6b952d7f593e6102ac83d7da72838' ),
          
        ( Key    : '10000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'ae70e355cb7e26ff12421f46cdad5cb9'+
                   '8367fe0e86cc234edf97481765cd1ad9' )
    );
{$ENDIF ECB}
{$IFDEF CBC}
function TestEncryptShacalCBC (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestDecryptShacalCBC (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestShacalCBC : Boolean;

const
    SHACAL_CBC_TEST_VECTORS : packed array [0..3] of TShacalTestVector = (
        { 512-битный ключ }
        ( Key    : '80000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'cb0b9b2a6ad520c2faf8b8ba6be266af'+
                   'ceeceff83cd52f879f968aa73025f4d7' ),

        ( Key    : '40000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '17c8ba07d87b9336cbb8b7d6e1a0a37a'+
                   'bbe9cc4037a3e3942dbc65d5f46de840' ),

        ( Key    : '20000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'ed8d6209626623c5bc829a1faa4e4286'+
                   '6440a5b0fac94837894c8161a4a7b8f8' ),

        ( Key    : '10000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '6b9f1844f148bd0a44e5ae992eb949ed'+
                   'c21fd6e7cebd4a79ca62fcbfffcf798a' )
    );
{$ENDIF CBC}
{$IFDEF CFB}
function TestEncryptShacalCFB (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestDecryptShacalCFB (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestShacalCFB : Boolean;

const
    SHACAL_CFB_TEST_VECTORS : packed array [0..3] of TShacalTestVector = (
        { 512-битный ключ }
        ( Key    : '80000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'cb0b9b2a6ad520c2faf8b8ba6be266af'+
                   'ceeceff83cd52f879f968aa73025f4d7' ),

        ( Key    : '40000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '17c8ba07d87b9336cbb8b7d6e1a0a37a'+
                   'bbe9cc4037a3e3942dbc65d5f46de840' ),

        ( Key    : '20000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'ed8d6209626623c5bc829a1faa4e4286'+
                   '6440a5b0fac94837894c8161a4a7b8f8' ),

        ( Key    : '10000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '6b9f1844f148bd0a44e5ae992eb949ed'+
                   'c21fd6e7cebd4a79ca62fcbfffcf798a' )
    );
{$ENDIF CFB}
{$IFDEF OFB}
function TestEncryptShacalOFB (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestDecryptShacalOFB (const aKey: String;
                               const anIV: String;
                               const aValue: String) : String;
function TestShacalOFB : Boolean;

const
    SHACAL_OFB_TEST_VECTORS : packed array [0..3] of TShacalTestVector = (
        { 512-битный ключ }
        ( Key    : '80000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'cb0b9b2a6ad520c2faf8b8ba6be266af'+
                   'ceeceff83cd52f879f968aa73025f4d7' ),

        ( Key    : '40000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '17c8ba07d87b9336cbb8b7d6e1a0a37a'+
                   'bbe9cc4037a3e3942dbc65d5f46de840' ),

        ( Key    : '20000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : 'ed8d6209626623c5bc829a1faa4e4286'+
                   '6440a5b0fac94837894c8161a4a7b8f8' ),

        ( Key    : '10000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          IV     : '603deb1015ca71be2b73aef0857d7781'+
                   '1f352c073b6108d72d9810a30914dff4';
          Plain  : '00000000000000000000000000000000'+
                   '00000000000000000000000000000000';
          Cipher : '6b9f1844f148bd0a44e5ae992eb949ed'+
                   'c21fd6e7cebd4a79ca62fcbfffcf798a' )
    );
{$ENDIF OFB}
